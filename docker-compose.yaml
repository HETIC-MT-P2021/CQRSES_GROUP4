version: "3.8"
services:
  # Db mysql
  db:
    image: mysql:8
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: goproject
      MYSQL_PASSWORD: goproject
      MYSQL_DATABASE: app
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      DB_HOST: tcp(db:3306)
    volumes:
      - ./docker/data:/docker-entrypoint-initdb.d
    networks:
      - backend

  # Api Service
  api:
    build:
      context: ./
      dockerfile: ./build/Dockerfile-go
    environment:
      API_PORT: "8080"
      MYSQL_USER: goproject
      MYSQL_PASSWORD: goproject
      MYSQL_DATABASE: app
      DB_HOST: tcp(db:3306)
    ports:
      - "8080:8080"
    volumes:
      - ./:/go:rw
    networks:
      - elastic
      - backend

  # Elastic
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch
      - cluster.name=docker-cluster
    #  - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
    ulimits:
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata1
        target: /usr/share/elasticsearch/data
    networks:
      - elastic
      - ingress
    ports:
      - 9200:9200
      - 9300:9300

  # # kibana
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.8.0
  #   container_name: kibana
  #   environment:
  #     SERVER_NAME: localhost
  #     ELASTICSEARCH_URL: http://elasticsearch1:9200/
  #   ports:
  #     - 5601:5601
  #   volumes:
  #     - type: volume
  #       source: logs
  #       target: /var/log
  #   ulimits:
  #     nproc: 65535
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   cap_add:
  #     - ALL
  #   networks:
  #     - elastic
  #     - ingress

volumes:
  esdata1:
  logs:

networks:
  backend:
    driver: "bridge"
  elastic:
  ingress:
